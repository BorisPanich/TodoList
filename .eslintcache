[{"D:\\Work\\React\\todolist-13\\src\\App.tsx":"1","D:\\Work\\React\\todolist-13\\src\\Task.tsx":"2","D:\\Work\\React\\todolist-13\\src\\state\\tasks-reducer.ts":"3","D:\\Work\\React\\todolist-13\\src\\state\\todolists-reducer.ts":"4","D:\\Work\\React\\todolist-13\\src\\reportWebVitals.ts":"5","D:\\Work\\React\\todolist-13\\src\\EditableSpan.tsx":"6","D:\\Work\\React\\todolist-13\\src\\state\\store.ts":"7","D:\\Work\\React\\todolist-13\\src\\index.tsx":"8","D:\\Work\\React\\todolist-13\\src\\Todolist.tsx":"9","D:\\Work\\React\\todolist-13\\src\\stories\\Button.stories.tsx":"10","D:\\Work\\React\\todolist-13\\src\\stories\\Button.tsx":"11"},{"size":131,"mtime":1611419823822,"results":"12","hashOfConfig":"13"},{"size":1603,"mtime":1594154664000,"results":"14","hashOfConfig":"13"},{"size":3586,"mtime":1611420271929,"results":"15","hashOfConfig":"13"},{"size":2578,"mtime":1611420289445,"results":"16","hashOfConfig":"13"},{"size":425,"mtime":1607869389337,"results":"17","hashOfConfig":"13"},{"size":952,"mtime":1594154724000,"results":"18","hashOfConfig":"13"},{"size":892,"mtime":1592818784000,"results":"19","hashOfConfig":"13"},{"size":641,"mtime":1611420546000,"results":"20","hashOfConfig":"13"},{"size":3487,"mtime":1611420546000,"results":"21","hashOfConfig":"13"},{"size":804,"mtime":499162500000,"results":"22","hashOfConfig":"13"},{"size":941,"mtime":499162500000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ics22n",{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\React\\todolist-13\\src\\App.tsx",[],"D:\\Work\\React\\todolist-13\\src\\Task.tsx",["47","48","49"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskType} from './Todolist'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.isDone ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.isDone}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\Work\\React\\todolist-13\\src\\state\\tasks-reducer.ts",["50"],"D:\\Work\\React\\todolist-13\\src\\state\\todolists-reducer.ts",["51"],"D:\\Work\\React\\todolist-13\\src\\reportWebVitals.ts",[],"D:\\Work\\React\\todolist-13\\src\\EditableSpan.tsx",[],"D:\\Work\\React\\todolist-13\\src\\state\\store.ts",[],"D:\\Work\\React\\todolist-13\\src\\index.tsx",[],"D:\\Work\\React\\todolist-13\\src\\Todolist.tsx",["52","53","54","55","56"],"D:\\Work\\React\\todolist-13\\src\\stories\\Button.stories.tsx",[],"D:\\Work\\React\\todolist-13\\src\\stories\\Button.tsx",[],{"ruleId":"57","severity":1,"message":"58","line":15,"column":97,"nodeType":"59","endLine":15,"endColumn":130,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"58","line":20,"column":8,"nodeType":"59","endLine":20,"endColumn":41,"suggestions":"61"},{"ruleId":"57","severity":1,"message":"58","line":24,"column":8,"nodeType":"59","endLine":24,"endColumn":41,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":45,"column":53,"nodeType":"65","messageId":"66","endLine":45,"endColumn":55},{"ruleId":"63","severity":1,"message":"64","line":33,"column":45,"nodeType":"65","messageId":"66","endLine":33,"endColumn":47},{"ruleId":"57","severity":1,"message":"58","line":35,"column":8,"nodeType":"59","endLine":35,"endColumn":33,"suggestions":"67"},{"ruleId":"57","severity":1,"message":"58","line":42,"column":8,"nodeType":"59","endLine":42,"endColumn":45,"suggestions":"68"},{"ruleId":"57","severity":1,"message":"58","line":44,"column":86,"nodeType":"59","endLine":44,"endColumn":116,"suggestions":"69"},{"ruleId":"57","severity":1,"message":"58","line":45,"column":92,"nodeType":"59","endLine":45,"endColumn":122,"suggestions":"70"},{"ruleId":"57","severity":1,"message":"58","line":46,"column":98,"nodeType":"59","endLine":46,"endColumn":128,"suggestions":"71"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["72"],["73"],["74"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["75"],["76"],["77"],["78"],["79"],{"desc":"80","fix":"81"},{"desc":"80","fix":"82"},{"desc":"80","fix":"83"},{"desc":"80","fix":"84"},{"desc":"80","fix":"85"},{"desc":"80","fix":"86"},{"desc":"80","fix":"87"},{"desc":"80","fix":"88"},"Update the dependencies array to be: [props]",{"range":"89","text":"90"},{"range":"91","text":"90"},{"range":"92","text":"90"},{"range":"93","text":"90"},{"range":"94","text":"90"},{"range":"95","text":"90"},{"range":"96","text":"90"},{"range":"97","text":"90"},[693,726],"[props]",[955,988],[1145,1178],[1177,1202],[1415,1452],[1542,1572],[1666,1696],[1796,1826]]