[{"D:\\Work\\React\\todo-16\\src\\features\\TodolistsList\\TodolistsList.tsx":"1","D:\\Work\\React\\todo-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"2","D:\\Work\\React\\todo-16\\src\\components\\EditableSpan\\EditableSpan.tsx":"3","D:\\Work\\React\\todo-16\\src\\app\\store.ts":"4","D:\\Work\\React\\todo-16\\src\\features\\TodolistsList\\todolists-reducer.ts":"5","D:\\Work\\React\\todo-16\\src\\index.tsx":"6"},{"size":3802,"mtime":1597327450000,"results":"7","hashOfConfig":"8"},{"size":1773,"mtime":1596295538000,"results":"9","hashOfConfig":"8"},{"size":952,"mtime":1594154724000,"results":"10","hashOfConfig":"8"},{"size":1097,"mtime":1597327450000,"results":"11","hashOfConfig":"8"},{"size":4585,"mtime":1597327450000,"results":"12","hashOfConfig":"8"},{"size":643,"mtime":1611389400828,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1o8uq61",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\React\\todo-16\\src\\features\\TodolistsList\\TodolistsList.tsx",["27","28","29","30","31","32","33","34"],"D:\\Work\\React\\todo-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["35","36","37"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\Work\\React\\todo-16\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\Work\\React\\todo-16\\src\\app\\store.ts",[],"D:\\Work\\React\\todo-16\\src\\features\\TodolistsList\\todolists-reducer.ts",["38"],"D:\\Work\\React\\todo-16\\src\\index.tsx",[],{"ruleId":"39","severity":1,"message":"40","line":34,"column":8,"nodeType":"41","endLine":34,"endColumn":10,"suggestions":"42"},{"ruleId":"39","severity":1,"message":"43","line":39,"column":8,"nodeType":"41","endLine":39,"endColumn":10,"suggestions":"44"},{"ruleId":"39","severity":1,"message":"43","line":44,"column":8,"nodeType":"41","endLine":44,"endColumn":10,"suggestions":"45"},{"ruleId":"39","severity":1,"message":"43","line":49,"column":8,"nodeType":"41","endLine":49,"endColumn":10,"suggestions":"46"},{"ruleId":"39","severity":1,"message":"43","line":54,"column":8,"nodeType":"41","endLine":54,"endColumn":10,"suggestions":"47"},{"ruleId":"39","severity":1,"message":"43","line":59,"column":8,"nodeType":"41","endLine":59,"endColumn":10,"suggestions":"48"},{"ruleId":"39","severity":1,"message":"43","line":64,"column":8,"nodeType":"41","endLine":64,"endColumn":10,"suggestions":"49"},{"ruleId":"39","severity":1,"message":"43","line":69,"column":8,"nodeType":"41","endLine":69,"endColumn":10,"suggestions":"50"},{"ruleId":"39","severity":1,"message":"51","line":15,"column":97,"nodeType":"41","endLine":15,"endColumn":130,"suggestions":"52"},{"ruleId":"39","severity":1,"message":"51","line":20,"column":8,"nodeType":"41","endLine":20,"endColumn":41,"suggestions":"53"},{"ruleId":"39","severity":1,"message":"51","line":24,"column":8,"nodeType":"41","endLine":24,"endColumn":41,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":10,"column":45,"nodeType":"57","messageId":"58","endLine":10,"endColumn":47},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["59"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["60"],["61"],["62"],["63"],["64"],["65"],["66"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["67"],["68"],["69"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},{"desc":"72","fix":"74"},{"desc":"72","fix":"75"},{"desc":"72","fix":"76"},{"desc":"72","fix":"77"},{"desc":"72","fix":"78"},{"desc":"72","fix":"79"},{"desc":"80","fix":"81"},{"desc":"80","fix":"82"},{"desc":"80","fix":"83"},"Update the dependencies array to be: [demo, dispatch]",{"range":"84","text":"85"},"Update the dependencies array to be: [dispatch]",{"range":"86","text":"87"},{"range":"88","text":"87"},{"range":"89","text":"87"},{"range":"90","text":"87"},{"range":"91","text":"87"},{"range":"92","text":"87"},{"range":"93","text":"87"},"Update the dependencies array to be: [props]",{"range":"94","text":"95"},{"range":"96","text":"95"},{"range":"97","text":"95"},[1172,1174],"[demo, dispatch]",[1343,1345],"[dispatch]",[1514,1516],[1719,1721],[1932,1934],[2133,2135],[2280,2282],[2459,2461],[765,798],"[props]",[1071,1104],[1261,1294]]